{
  "name": "@fragola-ai/agentic-sdk-core",
  "version": "0.0.1",
  "description": "Fragola is a 100% openai format compatible library for building easy to complex agentic systems via an API that is minimalistic, event-driven and customizable with near zero abstractions.",
  "main": "./dist/fragola.index.js",
  "module": "./dist/fragola.index.js",
  "types": "./dist/fragola.index.d.ts",
  "type": "module",
  "exports": {
    ".": {
      "import": "./dist/fragola.index.js",
      "types": "./dist/fragola.index.d.ts"
    },
    "./store": {
      "import": "./dist/store.index.js",
      "types": "./dist/store.index.d.ts"
    },
    "./agent": {
      "import": "./dist/agent.index.js",
      "types": "./dist/agent.index.d.ts"
    },
    "./event": {
      "import": "./dist/event.index.js",
      "types": "./dist/event.index.d.ts"
    }
  },
  "files": [
    "dist/**/*",
    "README.md",
    "LICENSE"
  ],
  "keywords": [
    "ai",
    "llm",
    "agent",
    "sdk",
    "fragola",
    "typescript",
    "events",
    "middleware",
    "customizable",
    "openai",
    "compatible"
  ],
  "author": "Fragola AI",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/fragola-ai/agent-sdk.git"
  },
  "bugs": {
    "url": "https://github.com/fragola-ai/agent-sdk/issues"
  },
  "homepage": "https://github.com/fragola-ai/agent-sdk#readme",
  "publishConfig": {
    "access": "public"
  },
  "engines": {
    "node": ">=18"
  },
  "devDependencies": {
    "@types/bun": "latest",
    "esbuild": "^0.25.9",
    "typescript": "^5.9.2",
    "vitest": "^4.0.1"
  },
  "peerDependencies": {
    "typescript": "^5.9.2"
  },
  "dependencies": {
    "@eslint/js": "^9.34.0",
    "@fragola-ai/prompt": "^1.0.3",
    "eslint": "^9.34.0",
    "nanoid": "^5.1.5",
    "openai": "^5.6.0",
    "typescript-eslint": "^8.42.0",
    "zod": "^3.25.67"
  },
  "scripts": {
    "lint": "bunx eslint .",
    "clean": "rm -rf dist",
    "build": "bun run build.ts",
    "pretest": "cd test && rm -rf node_modules || true",
    "test": "npm run build && cd test && bun i && vitest --run",
    "pretest:ci": "cd test && bun i",
    "test:ci": "npm run build && cd test && bun i && vitest --run",
    "test:watch": "cd test && vitest",
    "prepublishOnly": "bun run build && bun run test"
  }
}
